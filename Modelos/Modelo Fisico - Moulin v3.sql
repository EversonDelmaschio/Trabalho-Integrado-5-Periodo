-- Geracao de Modelo fisico
-- Sql ANSI 2003 - brModelo.



CREATE TABLE MOVIMENTO (
Total FLOAT,
Data DATE,
ID SERIAL PRIMARY KEY
);

CREATE TABLE PAGAMENTO (
ID SERIAL PRIMARY KEY,
Forma VARCHAR(250)
);

CREATE TABLE PRODUTO (
Nome VARCHAR(250),
Valor FLOAT,
ID SERIAL PRIMARY KEY,
Grupo SERIAL
);

CREATE TABLE ESTOQUE (
Quantidade INTEGER,
Aquisicao INTEGER,
Validade DATE,
ID SERIAL,
FOREIGN KEY(ID) REFERENCES PRODUTO (ID)
);

CREATE TABLE HISTORICO (
Data DATE,
ID SERIAL PRIMARY KEY,
Movimento INTEGER,
Item SERIAL,
FOREIGN KEY(Item) REFERENCES PRODUTO (ID)
);

CREATE TABLE ITEM_MOVIMENTO (
Quantidade INTEGER,
Item INTEGER,
Valor FLOAT,
Movimento SERIAL,
ID SERIAL,
FOREIGN KEY(Movimento) REFERENCES MOVIMENTO (ID),
FOREIGN KEY(ID) REFERENCES PRODUTO (ID)
);

CREATE TABLE PRODUTO_LOJA_SURF (
Custo INTEGER,
ID SERIAL PRIMARY KEY,
FOREIGN KEY(ID) REFERENCES PRODUTO (ID)
);

CREATE TABLE PRODUTO_CANTINA (
ID SERIAL PRIMARY KEY,
FOREIGN KEY(ID) REFERENCES PRODUTO (ID)
);

CREATE TABLE GRUPO (
ID SERIAL PRIMARY KEY,
Desconto FLOAT,
Descricao varchar(100)
);

CREATE TABLE AQUISICAO (
Data DATE,
Total FLOAT,
Funcionario INTEGER,
ID SERIAL PRIMARY KEY,
FOREIGN KEY(ID) REFERENCES MOVIMENTO (ID)
);

CREATE TABLE VENDA (
Desconto FLOAT,
ID SERIAL PRIMARY KEY,
Forma_Pagamento SERIAL,
FOREIGN KEY(ID) REFERENCES MOVIMENTO (ID),
FOREIGN KEY(Forma_Pagamento) REFERENCES PAGAMENTO (ID)
);

CREATE TABLE PESSOA (
ID SERIAL PRIMARY KEY,
CPF VARCHAR(12),
Nome VARCHAR(250)
);

CREATE TABLE FUNCIONARIO (
ID SERIAL PRIMARY KEY,
Tipo SERIAL,
FOREIGN KEY(ID) REFERENCES PESSOA (ID)
);

CREATE TABLE TIPO_FUNCIONARIO (
ID SERIAL PRIMARY KEY,
Funcao VARCHAR(250)
);

CREATE TABLE RANKING (
ID SERIAL PRIMARY KEY,
Descricao VARCHAR(250)
);

CREATE TABLE PACOTE_AULA (
Aluno SERIAL,
Quantidade INTEGER,
Validade DATE
);

CREATE TABLE ALUNO (
ID SERIAL PRIMARY KEY,
Rank SERIAL,
FOREIGN KEY(ID) REFERENCES PESSOA (ID),
FOREIGN KEY(Rank) REFERENCES RANKING (ID)
);

CREATE TABLE TURMA (
Aula SERIAL,
Aluno SERIAL,
FOREIGN KEY(Aluno) REFERENCES ALUNO (ID)
);

CREATE TABLE TIPO_AULA (
ID SERIAL PRIMARY KEY,
Descricao VARCHAR(250)
);

CREATE TABLE AULA (
ID SERIAL PRIMARY KEY,
Descricao VARCHAR(250),
Tipo INTEGER,
Professor SERIAL,
FOREIGN KEY(Tipo) REFERENCES TIPO_AULA (ID)
);

ALTER TABLE PRODUTO ADD FOREIGN KEY(Grupo) REFERENCES GRUPO (ID);
ALTER TABLE FUNCIONARIO ADD FOREIGN KEY(Tipo) REFERENCES TIPO_FUNCIONARIO (ID);
ALTER TABLE PACOTE_AULA ADD FOREIGN KEY(Aluno) REFERENCES ALUNO (ID);
ALTER TABLE TURMA ADD FOREIGN KEY(Aula) REFERENCES AULA (ID);
